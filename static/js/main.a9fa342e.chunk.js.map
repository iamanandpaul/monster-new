{"version":3,"sources":["Components/Card/Card.js","Components/CardList/CardList.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","website","CardList","monsters","map","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","toString","type","placeholder","onChange","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAiBeA,MAdf,SAAcC,GACZ,OACE,sBAAKC,UAAU,OAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,6BAAKL,EAAMG,QAAQG,OACnB,wCAAWN,EAAMG,QAAQI,MAAzB,OACA,2CAAcP,EAAMG,QAAQK,QAA5B,WCESC,MAVf,SAAkBT,GAChB,OACE,qBAAKC,UAAU,WAAf,SACGD,EAAMU,SAASC,KAAI,SAACR,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCoCZQ,E,kDAvCb,aAAe,IAAD,8BACZ,gBAcFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXT,SAAU,GACVM,YAAa,IALH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEL,SAAUc,S,+BAOrC,IAAD,EAC2BC,KAAKN,MAA/BT,EADD,EACCA,SAAUM,EADX,EACWA,YACZU,EAAkBhB,EAASiB,QAAO,SAACxB,GAAD,OACtCA,EAAQG,KAAKsB,cAAcC,SAASb,EAAYc,WAAWF,kBAG7D,OACE,sBAAK3B,UAAU,MAAf,UACE,mDACA,uBACE8B,KAAK,SACLC,YAAY,kBACZC,SAAUR,KAAKZ,eAEjB,cAAC,EAAD,CAAUH,SAAUgB,W,GAlCVQ,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a9fa342e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card\">\n      <img\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n        alt=\"monster\"\n      />\n      <h2>{props.monster.name}</h2>\n      <p>Email: {props.monster.email} </p>\n      <p> Website: {props.monster.website} </p>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./CardList.css\";\nimport Card from \"../Card/Card\";\n\nfunction CardList(props) {\n  return (\n    <div className=\"cardList\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n}\n\nexport default CardList;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./Components/CardList/CardList\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonster = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toString().toLowerCase())\n    );\n\n    return (\n      <div className=\"app\">\n        <h1> Monsters Rolodex</h1>\n        <input\n          type=\"search\"\n          placeholder=\"search monsters\"\n          onChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonster}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}